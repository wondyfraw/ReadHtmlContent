<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<!-- See http://maven.apache.org/pom.html for a full description of all 
		supported values -->

	<!-- GroupID - identifies WHO is making the project -->
	<groupId>com.html</groupId>

	<!-- ArtifactId - the name of this project -->
	<artifactId>readhtmlcontent</artifactId>

	<!-- The current version -->
	<version>1.0-SNAPSHOT</version>

	<!-- How are we packaging - jar, war, ear -->
	<packaging>war</packaging>

	<!-- This is optional, used for any local names for the project. Can be 
		"softer" than the artifactId -->
	<name>F L E X Technology</name>


	<!-- Plugin Configurations -->
	<build>
		<plugins>

			<!-- <plugin>
				 <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-war-plugin</artifactId>
    <version>2.4</version>
				
				<configuration>
  				<outputDirectory>${basedir}/../htmllink</outputDirectory>
  				<warName>readhtmlcontent</warName>
  				</configuration>

			</plugin> -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>

				<configuration>
					<verbose>false</verbose>
				</configuration>
			</plugin>

		</plugins>
	</build>
	
	
	<!-- And now, a list of Maven projects that we depend upon -->
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.1</version>
		</dependency>

		<!-- <dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>[3.0.3, 4.0.0)</version>
		</dependency> -->

		<!-- although SpringMVC declares validation as a dependency, it is set 
			to provided scope, so it is not a transisitive dependency -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.0.0.GA</version>
		</dependency>

		<!-- <dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.3.1.Final</version>
		</dependency> -->

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
		</dependency>

		<dependency>
			<groupId>com.lowagie</groupId>
			<artifactId>itext</artifactId>
			<version>2.1.7</version>
		</dependency>

		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.9</version>
		</dependency>

		<!-- <dependency>
			<groupId>org.springframework.webflow</groupId>
			<artifactId>spring-webflow</artifactId>
			<version>2.3.2.RELEASE</version>
			<scope>runtime</scope>
		</dependency> -->

		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
			<scope>runtime</scope>
		</dependency>


	</dependencies>
</project>
